{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","start","getPlayerDistance","playerPos","game","player","getPosition","dist","pDistance","node","position","onPicked","info","spawnNewStar","gainScore","destroy","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAY;AADJ,KAHP;;AAQLC,UARK,oBAQI,CAGR,CAXI;AAcLC,SAdK,mBAcG,CAEP,CAhBI;;;AAkBL;AACAC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAOb,GAAGc,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCP,SAAjC,CAAX;AACA,eAAOI,IAAP;AACH,KAzBI;;AA2BLI,cAAU,oBAAY;AAClBjB,WAAGkB,IAAH,CAAQ,oBAAR;AACA;AACA,aAAKR,IAAL,CAAUS,YAAV;AACA;AACA,aAAKT,IAAL,CAAUU,SAAV;AACA;AACA,aAAKL,IAAL,CAAUM,OAAV;AACArB,WAAGkB,IAAH,CAAQ,wBAAR;AACH,KApCI;;AAsCLI,UAtCK,kBAsCEC,EAtCF,EAsCM;AACP;AACA,YAAI,KAAKf,iBAAL,KAA2B,KAAKH,UAApC,EAAgD;AAC5C;AACA,iBAAKY,QAAL;AACA;AACH;AACJ;AA7CI,CAAT","file":"Star.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pickRadius: 0\n    },\n\n\n    onLoad() {\n\n\n    },\n\n\n    start() {\n\n    },\n\n    // Star.js\n    getPlayerDistance: function () {\n        // 根据 player 节点位置判断距离\n        var playerPos = this.game.player.getPosition();\n        // 根据两点位置计算两点之间距离\n        var dist = cc.pDistance(this.node.position, playerPos);\n        return dist;\n    },\n\n    onPicked: function () {\n        cc.info('onPicked...cc.info')\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n        this.game.spawnNewStar();\n        //调用脚本得分方法\n        this.game.gainScore();\n        // 然后销毁当前星星节点\n        this.node.destroy();\n        cc.info('onPicked end...cc.info')\n    },\n\n    update(dt) {\n        // 每帧判断和主角之间的距离是否小于收集距离\n        if (this.getPlayerDistance() < this.pickRadius) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        }\n    },\n\n});\n"]}