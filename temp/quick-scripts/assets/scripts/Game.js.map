{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","info","groundY","y","height","spawnNewStar","score","newStar","instantiate","node","addChild","getComponent","game","setPosition","getNewStarPosition","randX","randY","random0To1","jumpHeight","maxX","width","randomMinus1To1","p","start","update","dt","gainScore","string","toString","audioEngine","playEffect"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;;AAOR;AACAC,yBAAiB,CART;AASRC,yBAAiB,CATT;;AAWR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAZA;;AAiBR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAlBA;;AAuBRE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SAvBN;AA2BR;AACAC,oBAAY;AACRV,qBAAS,IADD;AAERW,iBAAKjB,GAAGkB;AAFA;;AA5BJ,KAHP;;AAuCLC,UAvCK,oBAuCI;AACLnB,WAAGoB,IAAH,CAAQ,gBAAR;;AAEA;AACA,aAAKC,OAAL,GAAe,KAAKV,MAAL,CAAYW,CAAZ,GAAgB,KAAKX,MAAL,CAAYY,MAAZ,GAAqB,CAApD;AACA;AACA,aAAKC,YAAL;;AAEA,aAAKC,KAAL,GAAa,CAAb;;AAEAzB,WAAGoB,IAAH,CAAQ,sBAAR;AACH,KAlDI;;;AAoDLI,kBAAc,wBAAY;AACtB;AACA,YAAIE,UAAU1B,GAAG2B,WAAH,CAAe,KAAKtB,UAApB,CAAd;AACA;AACA,aAAKuB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACAL,gBAAQM,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACH,KA5DI;;AA8DLA,wBAAoB,8BAAY;AAC5B,YAAIC,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKd,OAAL,GAAerB,GAAGoC,UAAH,KAAkB,KAAKvB,MAAL,CAAYiB,YAAZ,CAAyB,QAAzB,EAAmCO,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAA7B;AACAL,gBAAQlC,GAAGwC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOtC,GAAGyC,CAAH,CAAKP,KAAL,EAAYC,KAAZ,CAAP;AACH,KAvEI;;AAyELO,SAzEK,mBAyEG,CAEP,CA3EI;AA6ELC,UA7EK,kBA6EEC,EA7EF,EA6EM,CACV,CA9EI;;;AAgFLC,eAAW,qBAAY;AACnB,aAAKpB,KAAL,IAAc,CAAd;AACA;AACA,aAAKX,YAAL,CAAkBgC,MAAlB,GAA2B,WAAW,KAAKrB,KAAL,CAAWsB,QAAX,EAAtC;;AAEA;AACA/C,WAAGgD,WAAH,CAAeC,UAAf,CAA0B,KAAKjC,UAA/B,EAA2C,KAA3C;AAEH;AAxFI,CAAT","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        //星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n\n        //地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n\n        //player节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n\n    },\n\n\n    onLoad() {\n        cc.info('onLoad begin..')\n\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height / 2;\n        // 生成一个新的星星\n        this.spawnNewStar();\n\n        this.score = 0;\n\n        cc.info('onLoad end......haha')\n    },\n\n    spawnNewStar: function () {\n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.getComponent('Star').game = this\n        newStar.setPosition(this.getNewStarPosition());\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width / 2;\n        randX = cc.randomMinus1To1() * maxX;\n        // 返回星星坐标\n        return cc.p(randX, randY);\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n    },\n\n    gainScore: function () {\n        this.score += 1;\n        // update scoreDisplay Label 文字\n        this.scoreDisplay.string = 'Score:' + this.score.toString();\n\n        //play audio \n        cc.audioEngine.playEffect(this.scoreAudio, false)\n\n    }\n});\n"]}