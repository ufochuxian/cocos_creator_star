{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","onLoad","info","jumpAction","setJumpAction","node","runAction","accLeft","accRight","xSpeed","setInputControl","start","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callBack","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","d","onKeyReleased","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n\n        jumpAudio: {\n            default: null,\n            url:cc.AudioClip\n        },\n    },\n\n\n    // onLoad () {},\n    onLoad() {\n        cc.info('onLoad...')\n        // 初始化跳跃动作\n        this.jumpAction = this.setJumpAction();\n        this.node.runAction(this.jumpAction);\n\n        //加速度方向开关\n        this.accLeft = false\n        this.accRight = false\n        //主角当前水平方向速度\n        this.xSpeed = 0\n\n        //初始化键盘输入监听\n        this.setInputControl()\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n\n        //添加一个回掉函数，用于在动作结束时候调用我们定义的其他方法\n        var callBack = cc.callFunc(this.playJumpSound(), this)\n        // 不断重复\n        return cc.repeatForever((cc.sequence(jumpUp, jumpDown)));\n    },\n\n    playJumpSound: function () {\n         // 调用声音引擎播放声音\n         cc.audioEngine.playEffect(this.jumpAudio, false);\n\n    },\n    setInputControl: function () {\n        var self = this;\n        // 添加键盘事件监听\n        cc.eventManager.addListener({\n            event: cc.EventListener.KEYBOARD,\n            // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\n            onKeyPressed: function (keyCode, event) {\n                switch (keyCode) {\n                    case cc.KEY.a:\n                        self.accLeft = true;\n                        self.accRight = false;\n                        break;\n                    case cc.KEY.d:\n                        self.accLeft = false;\n                        self.accRight = true;\n                        break;\n                }\n            },\n            // 松开按键时，停止向该方向的加速\n            onKeyReleased: function (keyCode, event) {\n                switch (keyCode) {\n                    case cc.KEY.a:\n                        self.accLeft = false;\n                        break;\n                    case cc.KEY.d:\n                        self.accRight = false;\n                        break;\n                }\n            }\n        }, self.node);\n    },\n\n    update(dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    }\n});\n"]}